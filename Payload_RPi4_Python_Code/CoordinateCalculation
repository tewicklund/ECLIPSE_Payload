import numpy as np
import warnings
warnings.filterwarnings('ignore')

#strength = np.zeros(360)
#Angles = int((RecivedServoData-620)*(180/1000))
#strength[Angles] = RecievedStrength

#Creating Data Set For Testing 1
angles1 = np.linspace(1,360,360)
strengths1 = np.linspace(-60,-60,45)
strengths = np.linspace(-30,-30,180)
strengths2 = np.linspace(-60,-60,135)
strengths1 = np.concatenate((strengths1, strengths, strengths2))
angles1[strengths1 != np.NaN]
strengths1[strengths1 != np.NaN]

#Creating Data Set For Testing 2
angles2 = np.linspace(1,360,360)
twostrengths1 = np.linspace(-60,-60,45)
twostrengths = np.linspace(-30,-30,180)
twostrengths2 = np.linspace(-60,-60,135)
strengths2 = np.concatenate((twostrengths1, twostrengths, twostrengths2))
angles1[strengths1 != np.NaN]
strengths1[strengths1 != np.NaN]

#Starting Data Insert
distance12 = 800
distance23 = 436
angles1 = angles1
angles2 = angles2
strengths1 = strengths1
strengths2 = strengths2

#Circular Means
angles1 = np.deg2rad(angles1)
angles2 = np.deg2rad(angles2)
strengths1 = ((min(strengths1))/strengths1)
strengths2 = ((min(strengths1))/strengths2)
strengths1 = (strengths1/(sum(strengths1)))
sins = np.mean(np.sin(angles1)*strengths1)
coss = np.mean(np.cos(angles1)*strengths1)
AverageAngle1 = abs(np.rad2deg(np.arctan2(sins,coss)))
strengths2 = (strengths2/(sum(strengths2)))
sins = np.mean(np.sin(angles1)*strengths2)
coss = np.mean(np.cos(angles1)*strengths2)
AverageAngle2 = abs(np.rad2deg(np.arctan2(sins,coss)))

#Average Angle
print("Average Angle 1:")
print(AverageAngle1)
print("Average Angle 2:")
print(AverageAngle2)

#Distance Calculation
Angle1 = np.deg2rad(AverageAngle1)
Angle2 = np.deg2rad(AverageAngle2)

groundx = distance12*np.cos(Angle1)
groundy = distance12*np.sin(Angle1)

finalx = groundx + distance23*np.cos(Angle2)
finaly = groundy + distance23*np.sin(Angle2)

print("Final X Coordinate:")
print(finalx)
print("Final Y Coordinate:")
print(finaly)
